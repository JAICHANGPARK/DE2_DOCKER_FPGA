--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone II" LPM_DECODES=16 LPM_WIDTH=4 data eq
--VERSION_BEGIN 9.0SP2 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2009:05:07:10:25:28:SJ cbx_lpm_compare 2009:02:03:01:43:16:SJ cbx_lpm_decode 2008:05:19:10:39:27:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


-- Copyright (C) 1991-2009 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 16 
SUBDESIGN decode_i5a
( 
	data[3..0]	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[2..0]	: WIRE;
	enable_wire1	: WIRE;
	enable_wire2	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire1w[7..0]	: WIRE;
	eq_wire2w[7..0]	: WIRE;
	w_anode100w[3..0]	: WIRE;
	w_anode110w[3..0]	: WIRE;
	w_anode120w[3..0]	: WIRE;
	w_anode131w[3..0]	: WIRE;
	w_anode141w[3..0]	: WIRE;
	w_anode151w[3..0]	: WIRE;
	w_anode161w[3..0]	: WIRE;
	w_anode171w[3..0]	: WIRE;
	w_anode181w[3..0]	: WIRE;
	w_anode191w[3..0]	: WIRE;
	w_anode33w[3..0]	: WIRE;
	w_anode50w[3..0]	: WIRE;
	w_anode60w[3..0]	: WIRE;
	w_anode70w[3..0]	: WIRE;
	w_anode80w[3..0]	: WIRE;
	w_anode90w[3..0]	: WIRE;

BEGIN 
	data_wire[2..0] = data[2..0];
	enable_wire1 = (! data[3..3]);
	enable_wire2 = data[3..3];
	eq[] = eq_node[];
	eq_node[] = ( eq_wire2w[7..0], eq_wire1w[]);
	eq_wire1w[] = ( w_anode110w[3..3], w_anode100w[3..3], w_anode90w[3..3], w_anode80w[3..3], w_anode70w[3..3], w_anode60w[3..3], w_anode50w[3..3], w_anode33w[3..3]);
	eq_wire2w[] = ( w_anode191w[3..3], w_anode181w[3..3], w_anode171w[3..3], w_anode161w[3..3], w_anode151w[3..3], w_anode141w[3..3], w_anode131w[3..3], w_anode120w[3..3]);
	w_anode100w[] = ( (w_anode100w[2..2] & data_wire[2..2]), (w_anode100w[1..1] & data_wire[1..1]), (w_anode100w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode110w[] = ( (w_anode110w[2..2] & data_wire[2..2]), (w_anode110w[1..1] & data_wire[1..1]), (w_anode110w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode120w[] = ( (w_anode120w[2..2] & (! data_wire[2..2])), (w_anode120w[1..1] & (! data_wire[1..1])), (w_anode120w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode131w[] = ( (w_anode131w[2..2] & (! data_wire[2..2])), (w_anode131w[1..1] & (! data_wire[1..1])), (w_anode131w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode141w[] = ( (w_anode141w[2..2] & (! data_wire[2..2])), (w_anode141w[1..1] & data_wire[1..1]), (w_anode141w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode151w[] = ( (w_anode151w[2..2] & (! data_wire[2..2])), (w_anode151w[1..1] & data_wire[1..1]), (w_anode151w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode161w[] = ( (w_anode161w[2..2] & data_wire[2..2]), (w_anode161w[1..1] & (! data_wire[1..1])), (w_anode161w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode171w[] = ( (w_anode171w[2..2] & data_wire[2..2]), (w_anode171w[1..1] & (! data_wire[1..1])), (w_anode171w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode181w[] = ( (w_anode181w[2..2] & data_wire[2..2]), (w_anode181w[1..1] & data_wire[1..1]), (w_anode181w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode191w[] = ( (w_anode191w[2..2] & data_wire[2..2]), (w_anode191w[1..1] & data_wire[1..1]), (w_anode191w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode33w[] = ( (w_anode33w[2..2] & (! data_wire[2..2])), (w_anode33w[1..1] & (! data_wire[1..1])), (w_anode33w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode50w[] = ( (w_anode50w[2..2] & (! data_wire[2..2])), (w_anode50w[1..1] & (! data_wire[1..1])), (w_anode50w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode60w[] = ( (w_anode60w[2..2] & (! data_wire[2..2])), (w_anode60w[1..1] & data_wire[1..1]), (w_anode60w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode70w[] = ( (w_anode70w[2..2] & (! data_wire[2..2])), (w_anode70w[1..1] & data_wire[1..1]), (w_anode70w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode80w[] = ( (w_anode80w[2..2] & data_wire[2..2]), (w_anode80w[1..1] & (! data_wire[1..1])), (w_anode80w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode90w[] = ( (w_anode90w[2..2] & data_wire[2..2]), (w_anode90w[1..1] & (! data_wire[1..1])), (w_anode90w[0..0] & data_wire[0..0]), enable_wire1);
END;
--VALID FILE
